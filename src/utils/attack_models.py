"""
This module contains all the architectures that should be used for attacking,
mainly neural nets with 1-3 hidden layers shall be used in most cases.
"""
import torch
from torch import nn
class PerceptronNN(nn.Module):
    def __init__(self, num_classes):
        """
        -A no hidden layer neural network architecture for the attack model
        Args: 
            - num_classes (int): The number of unique output in the target model
        """
        super().__init__()
        self.block1 = nn.Linear(in_features=num_classes,
                                out_features=1)
        self.relu = nn.ReLU()
    def forward(self, x):
        """
        Training the model to attack based on the dataset generated by shadow model
        """
        output = self.block1(x)
        return output
